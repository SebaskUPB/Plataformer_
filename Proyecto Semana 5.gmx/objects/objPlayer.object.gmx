<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///inicializacion de las variables

grav = 0.2;
hsp = 0;
vsp = 0;
movespeed = 4;


jumpspeed_normal = 7;
jumpspeed_powerup = 10;

jumpspeed = jumpspeed_normal
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// movimiento del jugador

//obtener las entradas de teclado
key_right = keyboard_check(vk_right);
key_left = keyboard_check(vk_left);
key_up = keyboard_check_pressed(vk_up);

//Operaciones con las entradas de teclado
move = key_right - key_left;
hsp = move * movespeed;

//Colision horizontal
if (place_meeting(x+hsp,y,objBloque)){
    while(!place_meeting(x+sign(hsp),y ,objBloque)){
     x += sign(hsp);
    }
    hsp = 0;
 }
x += hsp;

//Vertical Collision
if (place_meeting(x,y+vsp,objBloque)){
    while(!place_meeting(x,y+sign(vsp),objBloque)){
        y += sign(vsp);
    }
    vsp = 0;
}

if(vsp &lt;  10) {vsp += grav;}
if (place_meeting(x, y+1, objBloque)){
    vsp = key_up * -jumpspeed;
}
y += vsp;


if (hsp &gt; 0 ) 
{sprite_index = sprPlayerDerecha}
if (hsp &lt; 0 ) 
{sprite_index = sprPlayerIzquierda}
if (hsp = 0 ) 
{sprite_index = sprPlayer}
if (vsp &gt; 0 ) 
{sprite_index = sprPlayerJump}
if (vsp &lt; 0 ) 
{sprite_index = sprPlayerAbajo}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
